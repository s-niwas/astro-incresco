---
import { SITE, BLOG } from "~/config.mjs";
import PageLayout from "~/components/layout/PageLayout.astro";
import BlogList from "~/components/blog/List.astro";
import Pagination from "~/components/blog/Pagination.astro";

import { fetchPosts } from "~/utils/blogUtils";
import { TAG_BASE } from "~/utils/permalinks";
import Headline from "~/components/blog/HeadLine.astro";
import { useStoryblokApi } from "@storyblok/astro";

export async function getStaticPaths({ paginate }) {
  if (BLOG?.disabled || BLOG?.tag?.disabled) return [];
  const storyblokApi = useStoryblokApi();

  let posts: any = []; // it will be having all stories
  try {
    const { data } = await storyblokApi.get("cdn/stories/", {
      version: import.meta.env.DEV ? "draft" : "published",
      starts_with: "blog-post/",
    });
    posts = data.stories || [];
  } catch (error) {
    console.log("error", error);
  }
  const tags = new Set();
  posts.map(
    (post: any) =>
      Array.isArray(post.content.tags.split(",")) &&
      post.content.tags
        .split(",")
        .map((tag: string) => tags.add(tag.toLowerCase()))
  );
  return Array.from(tags).map((tag: any) =>
    paginate(
      posts
        .filter(
          (post: any) =>
            Array.isArray(post.content.tags.split(",")) &&
            post.content.tags
              .split(",")
              .find((elem: any) => elem.toLowerCase() === tag)
        )
        .sort(
          (a, b) =>
            new Date(b.content.publishDate) - new Date(a.content.publishDate)
        ),
      {
        params: { tag: tag.replaceAll(" ", "-"), blog: TAG_BASE || undefined },
        pageSize: BLOG.postsPerPage,
        props: { tag: tag },
      }
    )
  );
}

const { page, tag } = Astro.props;
const { generator, site } = Astro;
const image = new URL("logo.png", site);

const currentPage = page.currentPage ?? 1;
const meta = {
  title: `Incresco Blog Posts by tag '${tag}'${
    currentPage > 1 ? ` â€” Page ${currentPage} ` : ""
  }`,
  description: SITE.description,
  noindex: BLOG?.tag?.noindex,
  image,
};
---

<PageLayout meta={meta}>
  <section class="mx-auto max-w-3xl px-6 py-12 sm:px-6 sm:py-16 lg:py-20">
    <Headline>Tag: {tag}</Headline>
    <BlogList posts={page.data} />
    <Pagination prevUrl={page.url.prev} nextUrl={page.url.next} />
  </section>
</PageLayout>
